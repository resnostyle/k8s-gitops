---
version: "3"

vars:
  PROJECT_DIR:
    sh: "git rev-parse --show-toplevel"
  CLUSTER_DIR: "{{.PROJECT_DIR}}/cluster"
  K3S_PRIMARY_MASTER_NODE_USERNAME: "bryan"
  K3S_PRIMARY_MASTER_NODE_ADDR: "192.168.2.211"
  K3S_LB_ADDR: "192.168.1.1"
  ANSIBLE_PATH: "~/.ansible/"
  ARGO_CMD_REPO_ADD: "argocd"
  SSH_KEY_PATH: "~/.ssh/id_ed25519"

  #env:
  #  KUBECONFIG: "{{.CLUSTER_DIR}}/kubeconfig"

tasks:
  deps:
    - task: deps:ansible
      #    - task: deps:pre-commit

  bootstrap:kube:
    cmds:
      - task: deploy:argocd_repo
      - task: deploy:argocd_app

  deploy:deploy_argocd:
    desc: things
    dir: cluster/base/argo-cd
    cmds:
      - cmd: kubectl create ns argocd
        ignore_error: true
      - kubectl apply -k .

  deploy:argocd_repo:
    desc: things
    cmds:
      - kubens argocd
      - "{{.ARGO_CMD_REPO_ADD}} repo add git@gitlab.com:resnostyle/helm-charts.git --ssh-private-key-path {{.SSH_KEY_PATH}}"
      - "{{.ARGO_CMD_REPO_ADD}} repo add git@github.com:resnostyle/k8s-gitops.git --ssh-private-key-path {{.SSH_KEY_PATH}} --insecure-skip-server-verification"

  deploy:argocd_app:
    cmds:
      - argocd app create main --revision main --repo git@github.com:resnostyle/k8s-gitops.git --path applications/main --dest-server https://kubernetes.default.svc --directory-recurse --self-heal --sync-policy auto
        #:      - argocd app create core --repo git@github.com:resnostyle/k8s-gitops.git --path cluster/core --dest-server https://kubernetes.default.svc --directory-recurse --self-heal --sync-policy auto
        #- argocd app create apps --revision main --repo git@github.com:resnostyle/k8s-gitops.git --path applications/apps --dest-server https://kubernetes.default.svc --directory-recurse --auto-prune --self-heal --sync-policy auto
        #      - argocd app create crds --repo git@github.com:resnostyle/k8s-gitops.git --path cluster/crds --dest-server https://kubernetes.default.svc --directory-recurse --auto-prune --self-heal --sync-policy auto

  destroy:argocd_app:
    desc: destroy argocd apps
    cmds:
      - argocd app delete init -y
      - argocd app delete apps -y

  deps:ansible:
    desc: install/upgrade ansible deps
    dir: ansible
    cmds:
      - "ansible-galaxy install -r requirements.yml --roles-path {{.ANSIBLE_PATH}}roles --force"
      - "ansible-galaxy collection install -r requirements.yml --collections-path {{.ANSIBLE_PATH}}collections --force"
      - "pip3 install -r requirements.txt"

  kubeconfig:
    desc: Remotely fetch kubeconfig from Kubernetes
    cmds:
      - rsync --verbose --progress --partial --rsync-path="sudo rsync" {{.K3S_PRIMARY_MASTER_NODE_USERNAME}}@{{.K3S_PRIMARY_MASTER_NODE_ADDR}}:/etc/rancher/k3s/k3s.yaml "{{.CLUSTER_DIR}}/kubeconfig"
      - sed -i '' 's/127.0.0.1/{{.K3S_LB_ADDR}}/g' "{{.CLUSTER_DIR}}/kubeconfig"
      - chmod go-r "{{.CLUSTER_DIR}}/kubeconfig"
